//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarketClient.MarketServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="MarketExample", ConfigurationName="MarketServiceReference.IMarketService")]
    public interface IMarketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="MarketExample/IMarketService/GetNewId", ReplyAction="MarketExample/IMarketService/GetNewIdResponse")]
        int GetNewId();
        
        [System.ServiceModel.OperationContractAttribute(Action="MarketExample/IMarketService/GetNewId", ReplyAction="MarketExample/IMarketService/GetNewIdResponse")]
        System.Threading.Tasks.Task<int> GetNewIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="MarketExample/IMarketService/SaveCurrentSale", ReplyAction="MarketExample/IMarketService/SaveCurrentSaleResponse")]
        void SaveCurrentSale(string saleId, string name, int num, double unitPrice, double price, string operatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="MarketExample/IMarketService/SaveCurrentSale", ReplyAction="MarketExample/IMarketService/SaveCurrentSaleResponse")]
        System.Threading.Tasks.Task SaveCurrentSaleAsync(string saleId, string name, int num, double unitPrice, double price, string operatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="MarketExample/IMarketService/GetCurrentDaySale", ReplyAction="MarketExample/IMarketService/GetCurrentDaySaleResponse")]
        double GetCurrentDaySale();
        
        [System.ServiceModel.OperationContractAttribute(Action="MarketExample/IMarketService/GetCurrentDaySale", ReplyAction="MarketExample/IMarketService/GetCurrentDaySaleResponse")]
        System.Threading.Tasks.Task<double> GetCurrentDaySaleAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMarketServiceChannel : MarketClient.MarketServiceReference.IMarketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarketServiceClient : System.ServiceModel.ClientBase<MarketClient.MarketServiceReference.IMarketService>, MarketClient.MarketServiceReference.IMarketService {
        
        public MarketServiceClient() {
        }
        
        public MarketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MarketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetNewId() {
            return base.Channel.GetNewId();
        }
        
        public System.Threading.Tasks.Task<int> GetNewIdAsync() {
            return base.Channel.GetNewIdAsync();
        }
        
        public void SaveCurrentSale(string saleId, string name, int num, double unitPrice, double price, string operatorName) {
            base.Channel.SaveCurrentSale(saleId, name, num, unitPrice, price, operatorName);
        }
        
        public System.Threading.Tasks.Task SaveCurrentSaleAsync(string saleId, string name, int num, double unitPrice, double price, string operatorName) {
            return base.Channel.SaveCurrentSaleAsync(saleId, name, num, unitPrice, price, operatorName);
        }
        
        public double GetCurrentDaySale() {
            return base.Channel.GetCurrentDaySale();
        }
        
        public System.Threading.Tasks.Task<double> GetCurrentDaySaleAsync() {
            return base.Channel.GetCurrentDaySaleAsync();
        }
    }
}
