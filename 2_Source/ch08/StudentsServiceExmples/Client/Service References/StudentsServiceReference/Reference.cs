//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.StudentsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Students", Namespace="http://schemas.datacontract.org/2004/07/Service")]
    [System.SerializableAttribute()]
    public partial class Students : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, Client.StudentsServiceReference.Student> StudentListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, Client.StudentsServiceReference.Student> StudentList {
            get {
                return this.StudentListField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentListField, value) != true)) {
                    this.StudentListField = value;
                    this.RaisePropertyChanged("StudentList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/Service")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OtherInfo {
            get {
                return this.OtherInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherInfoField, value) != true)) {
                    this.OtherInfoField = value;
                    this.RaisePropertyChanged("OtherInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="WcfServiceExamples", ConfigurationName="StudentsServiceReference.IStudentsService")]
    public interface IStudentsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="WcfServiceExamples/IStudentsService/GetData", ReplyAction="WcfServiceExamples/IStudentsService/GetDataResponse")]
        Client.StudentsServiceReference.Students GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="WcfServiceExamples/IStudentsService/GetData", ReplyAction="WcfServiceExamples/IStudentsService/GetDataResponse")]
        System.Threading.Tasks.Task<Client.StudentsServiceReference.Students> GetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="WcfServiceExamples/IStudentsService/Hello", ReplyAction="WcfServiceExamples/IStudentsService/HelloResponse")]
        string Hello(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="WcfServiceExamples/IStudentsService/Hello", ReplyAction="WcfServiceExamples/IStudentsService/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="WcfServiceExamples/IStudentsService/UpdateScore", ReplyAction="WcfServiceExamples/IStudentsService/UpdateScoreResponse")]
        void UpdateScore(Client.StudentsServiceReference.Student student, int newScore);
        
        [System.ServiceModel.OperationContractAttribute(Action="WcfServiceExamples/IStudentsService/UpdateScore", ReplyAction="WcfServiceExamples/IStudentsService/UpdateScoreResponse")]
        System.Threading.Tasks.Task UpdateScoreAsync(Client.StudentsServiceReference.Student student, int newScore);
        
        [System.ServiceModel.OperationContractAttribute(Action="WcfServiceExamples/IStudentsService/GetStudentsValue", ReplyAction="WcfServiceExamples/IStudentsService/GetStudentsValueResponse")]
        string GetStudentsValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="WcfServiceExamples/IStudentsService/GetStudentsValue", ReplyAction="WcfServiceExamples/IStudentsService/GetStudentsValueResponse")]
        System.Threading.Tasks.Task<string> GetStudentsValueAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentsServiceChannel : Client.StudentsServiceReference.IStudentsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentsServiceClient : System.ServiceModel.ClientBase<Client.StudentsServiceReference.IStudentsService>, Client.StudentsServiceReference.IStudentsService {
        
        public StudentsServiceClient() {
        }
        
        public StudentsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.StudentsServiceReference.Students GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<Client.StudentsServiceReference.Students> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
        
        public string Hello(string name) {
            return base.Channel.Hello(name);
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync(string name) {
            return base.Channel.HelloAsync(name);
        }
        
        public void UpdateScore(Client.StudentsServiceReference.Student student, int newScore) {
            base.Channel.UpdateScore(student, newScore);
        }
        
        public System.Threading.Tasks.Task UpdateScoreAsync(Client.StudentsServiceReference.Student student, int newScore) {
            return base.Channel.UpdateScoreAsync(student, newScore);
        }
        
        public string GetStudentsValue() {
            return base.Channel.GetStudentsValue();
        }
        
        public System.Threading.Tasks.Task<string> GetStudentsValueAsync() {
            return base.Channel.GetStudentsValueAsync();
        }
    }
}
